/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas;

import clases.Conex;
import clases.DaoAdministracion;
import clases.DaoProducto;
import clases.DaoTipo;
import java.awt.Font;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Miguel Angel Guevara el frame contiene todas las invocaciones de
 * metodos para el Frame Producto.
 */
public class frmProducto extends javax.swing.JFrame {

    int busqueda = 0;

    private void skin() {
        Font textTitulo = new Font("Tahoma", Font.BOLD, 24);
        Font textComponente = new Font("Tahoma", Font.BOLD, 14);
        lblProducto.setFont(textTitulo);
        lblAdministracion.setFont(textComponente);
        lblContenidoCaja.setFont(textComponente);
        lblNombreProductoGen.setFont(textComponente);
        lblNombreProductoPat.setFont(textComponente);
        lblStockActual.setFont(textComponente);
        lblStockMinimo.setFont(textComponente);
        lblTipo.setFont(textComponente);
        txtContenidoCaja.setFont(textComponente);
        txtNombreProductoGen.setFont(textComponente);
        txtNombreProductoPat.setFont(textComponente);
        txtStockActual.setFont(textComponente);
        txtStockMinimo.setFont(textComponente);
        tblProductos.setFont(textComponente);
        cmbAdministracion.setFont(textComponente);
        cmbTipoProducto.setFont(textComponente);
        btnAgregar.setFont(textComponente);
        btnAgregarAdministracion.setFont(textComponente);
        btnBuscar.setFont(textComponente);
        btnEliminar.setFont(textComponente);
        btnListarParecidos.setFont(textComponente);
        btnModificar.setFont(textComponente);
        btnTipo.setFont(textComponente);
        btnSalir.setFont(textComponente);
    }

    /**
     * Creates new form Producto
     */
    public frmProducto() {
        initComponents();
        skin();
        CargacomboTipo();
        CargacomboAdmin();
        btnListarParecidos.doClick();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblProducto = new javax.swing.JLabel();
        lblNombreProductoPat = new javax.swing.JLabel();
        txtNombreProductoPat = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        lblContenidoCaja = new javax.swing.JLabel();
        lblAdministracion = new javax.swing.JLabel();
        lblTipo = new javax.swing.JLabel();
        lblStockActual = new javax.swing.JLabel();
        txtStockActual = new javax.swing.JTextField();
        txtContenidoCaja = new javax.swing.JTextField();
        btnAgregarAdministracion = new javax.swing.JButton();
        btnTipo = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        cmbTipoProducto = new javax.swing.JComboBox();
        cmbAdministracion = new javax.swing.JComboBox();
        lblNombreProductoGen = new javax.swing.JLabel();
        txtNombreProductoGen = new javax.swing.JTextField();
        lblStockMinimo = new javax.swing.JLabel();
        txtStockMinimo = new javax.swing.JTextField();
        btnListarParecidos = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Farmacia - Registro de productos");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblProducto.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblProducto.setText("PRODUCTOS");
        getContentPane().add(lblProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 24, -1, -1));

        lblNombreProductoPat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNombreProductoPat.setText("NOMBRE PRODUCTO  PATENTE");
        getContentPane().add(lblNombreProductoPat, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 90, -1, -1));

        txtNombreProductoPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreProductoPatActionPerformed(evt);
            }
        });
        txtNombreProductoPat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreProductoPatKeyReleased(evt);
            }
        });
        getContentPane().add(txtNombreProductoPat, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 143, -1));

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProductos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 80, 593, 368));

        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 477, -1, 40));

        btnEliminar.setText("ELIMINAR");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 480, -1, 40));

        btnModificar.setText("MODIFICAR");
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        getContentPane().add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 480, -1, 40));

        lblContenidoCaja.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblContenidoCaja.setText("CONTENIDO DE CAJA");
        getContentPane().add(lblContenidoCaja, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 154, -1, -1));

        lblAdministracion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblAdministracion.setText("ADMINISTRACION");
        getContentPane().add(lblAdministracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 263, -1, -1));

        lblTipo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTipo.setText("TIPO DE PRODUCTO");
        getContentPane().add(lblTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 336, -1, -1));

        lblStockActual.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblStockActual.setText("STOCK ACTUAL");
        getContentPane().add(lblStockActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 192, -1, -1));

        txtStockActual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtStockActualKeyReleased(evt);
            }
        });
        getContentPane().add(txtStockActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, 94, -1));

        txtContenidoCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContenidoCajaActionPerformed(evt);
            }
        });
        txtContenidoCaja.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtContenidoCajaKeyReleased(evt);
            }
        });
        getContentPane().add(txtContenidoCaja, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 150, 143, -1));

        btnAgregarAdministracion.setText("NUEVO METODO");
        btnAgregarAdministracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarAdministracionActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregarAdministracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 250, -1, 40));

        btnTipo.setText("NUEVO TIPO");
        btnTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTipoActionPerformed(evt);
            }
        });
        getContentPane().add(btnTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 330, -1, 40));

        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 480, -1, 40));

        getContentPane().add(cmbTipoProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 340, 120, -1));

        getContentPane().add(cmbAdministracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, 120, -1));

        lblNombreProductoGen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNombreProductoGen.setText("NOMBRE PRODUCTO GENERICO");
        getContentPane().add(lblNombreProductoGen, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 128, -1, -1));

        txtNombreProductoGen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreProductoGenActionPerformed(evt);
            }
        });
        txtNombreProductoGen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreProductoGenKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreProductoGenKeyTyped(evt);
            }
        });
        getContentPane().add(txtNombreProductoGen, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 143, -1));

        lblStockMinimo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblStockMinimo.setText("STOCK MINIMO");
        getContentPane().add(lblStockMinimo, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 227, -1, -1));
        getContentPane().add(txtStockMinimo, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, 94, -1));

        btnListarParecidos.setText("LISTAR PARECIDOS");
        btnListarParecidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarParecidosActionPerformed(evt);
            }
        });
        getContentPane().add(btnListarParecidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 480, -1, 40));

        btnSalir.setText("SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 480, -1, 40));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/FondoVerde.jpg"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1260, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreProductoPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreProductoPatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreProductoPatActionPerformed

    private void txtContenidoCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContenidoCajaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContenidoCajaActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        DaoProducto dp1 = new DaoProducto();
        int idAdmin = 0, idTipo = 0;

        if (!txtNombreProductoPat.getText().isEmpty()
                && !txtNombreProductoGen.getText().isEmpty()
                && !txtContenidoCaja.getText().isEmpty()
                && !txtStockActual.getText().isEmpty()
                && !txtStockMinimo.getText().isEmpty()) {
            if (isNumeric(txtStockActual.getText())) {
                if (isNumeric(txtStockMinimo.getText())) {
                    if (cmbAdministracion.getItemCount() != 0) {
                        if (cmbTipoProducto.getItemCount() != 0) {
                            dp1.setNombreProductoPat(txtNombreProductoPat.getText());
                            dp1.setNombreProductoGen(txtNombreProductoGen.getText());
                            dp1.setContenidoCaja(txtContenidoCaja.getText());
                            dp1.setStockActual(Integer.parseInt(txtStockActual.getText()));
                            dp1.setStockMinimo(Integer.parseInt(txtStockMinimo.getText()));
                            String admin = cmbAdministracion.getSelectedItem().toString();
                            String tipo = cmbTipoProducto.getSelectedItem().toString();
                            Connection con = Conex.getInstance().getConnection();
                            String sql = "{call sp_adm_lis(?)}";
                            String sql2 = "{call sp_tip_lis(?)}";
                            try {
                                CallableStatement stm = con.prepareCall(sql);
                                stm.setString(1, admin);
                                ResultSet rs = stm.executeQuery();
                                if (rs.next()) {
                                    idAdmin = rs.getInt("idAdministracion");
                                }
                                CallableStatement stm2 = con.prepareCall(sql2);
                                stm2.setString(1, tipo);
                                ResultSet rs2 = stm2.executeQuery();
                                if (rs2.next()) {
                                    idTipo = rs2.getInt("idTipo");
                                }
                            } catch (SQLException ex) {
                                JOptionPane.showMessageDialog(this, ex);
                            }
                            dp1.setAdministracion(idAdmin);
                            dp1.setTipo(idTipo);
                            if ((dp1.agregar()) == true) {
                                JOptionPane.showMessageDialog(rootPane, "Producto agregado.");
                                txtNombreProductoPat.setText("");
                                txtNombreProductoGen.setText("");
                                txtStockActual.setText("");
                                txtContenidoCaja.setText("");
                                txtStockActual.setText("");
                                txtStockMinimo.setText("");
                                CargacomboAdmin();
                                CargacomboTipo();
                                btnListarParecidos.doClick();
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "No se agrego el producto.");
                            }
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar un tipo.");
                            CargacomboTipo();
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Debe seleccionar una via de administración.");
                        CargacomboAdmin();
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "El stock minimo debe ser un valor numerico.");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "El stock actual debe ser un valor numerico.");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Es necesario colocar todos los datos.");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnAgregarAdministracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarAdministracionActionPerformed
        this.setVisible(false);
        frmAdministracion adm = new frmAdministracion();
        adm.setVisible(true);
    }//GEN-LAST:event_btnAgregarAdministracionActionPerformed

    private void btnTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTipoActionPerformed
        this.setVisible(false);
        frmTipo tipo = new frmTipo();
        tipo.setVisible(true);
    }//GEN-LAST:event_btnTipoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        DaoProducto d5 = new DaoProducto();
//        d5.setIdProducto(Integer.valueOf(cmbExistentes.getSelectedItem().toString()));
        int idAdmin = 0, idTipo = 0;
        d5.setIdProducto(busqueda);
        d5.setNombreProductoPat(txtNombreProductoPat.getText());
        d5.setNombreProductoGen(txtNombreProductoGen.getText());
        d5.setContenidoCaja(txtContenidoCaja.getText());
        d5.setStockActual(Integer.parseInt(txtStockActual.getText()));
        d5.setStockMinimo(Integer.parseInt(txtStockMinimo.getText()));
        String admin = cmbAdministracion.getSelectedItem().toString();
        String tipo = cmbTipoProducto.getSelectedItem().toString();
        Connection con = Conex.getInstance().getConnection();
        String sql = "{call sp_adm_lis(?)}";
        String sql2 = "{call sp_tip_lis(?)}";
        try {
            CallableStatement stm = con.prepareCall(sql);
            stm.setString(1, admin);
            ResultSet rs = stm.executeQuery();
            if (rs.next()) {
                idAdmin = rs.getInt("idAdministracion");
            }
            CallableStatement stm2 = con.prepareCall(sql2);
            stm2.setString(1, tipo);
            ResultSet rs2 = stm2.executeQuery();
            if (rs2.next()) {
                idTipo = rs2.getInt("idTipo");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "ERROR");
        }
        d5.setAdministracion(idAdmin);
        d5.setTipo(idTipo);
        if (d5.modificar()) {
            JOptionPane.showMessageDialog(rootPane, "Registro modificado");
            txtNombreProductoPat.setText("");
            txtNombreProductoGen.setText("");
            txtContenidoCaja.setText("");
            txtStockActual.setText("");
            txtStockMinimo.setText("");
            CargacomboAdmin();
            CargacomboTipo();

            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
            btnListarParecidos.doClick();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Registro no modificado");
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        DaoProducto d5 = new DaoProducto();
        d5.setNombreProductoPat(txtNombreProductoPat.getText());
        if (d5.eliminar()) {
            JOptionPane.showMessageDialog(rootPane, "Se elimino el registro");
            txtNombreProductoPat.setText("");
            txtNombreProductoGen.setText("");
            txtContenidoCaja.setText("");
            txtStockActual.setText("");
            txtStockMinimo.setText("");
            CargacomboAdmin();
            CargacomboTipo();
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
            btnListarParecidos.doClick();
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se elimino el registro");
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        DaoProducto d5 = new DaoProducto();
        DaoTipo dt = new DaoTipo();
        DaoAdministracion da = new DaoAdministracion();
        int idAdmin, idTipo;
        String admin = null, tipo = null;
//        Object adminObject = null, tipoObject = null;
        d5.setNombreProductoPat(txtNombreProductoPat.getText());
        Connection con = Conex.getInstance().getConnection();
        String sql = "{call sp_prod_lis(?)}";
        String sql2 = "{call sp_adm_id(?)}";
        String sql3 = "{call sp_tip_id(?)}";
        try {
            CallableStatement stm = con.prepareCall(sql);
            stm.setString(1, txtNombreProductoPat.getText());
            ResultSet rs = stm.executeQuery();
            if (rs.next()) {
                busqueda = rs.getInt("idProducto");
                idAdmin = rs.getInt("idAdministracion");
                idTipo = rs.getInt("idTipo");
                try {
                    CallableStatement stm2 = con.prepareCall(sql2);
                    stm2.setInt(1, idAdmin);
                    ResultSet rs2 = stm2.executeQuery();
                    if (rs2.next()) {
                        admin = rs2.getString("administracion");
                    }
                    CallableStatement stm3 = con.prepareCall(sql3);
                    stm3.setInt(1, idTipo);
                    ResultSet rs3 = stm3.executeQuery();
                    if (rs3.next()) {
                        tipo = rs3.getString("tipo");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "ERROR");
                }
                if (d5.buscar()) {
                    txtNombreProductoPat.setText(d5.getNombreProductoPat());
                    txtNombreProductoGen.setText(d5.getNombreProductoGen());
                    txtContenidoCaja.setText(d5.getContenidoCaja());
                    txtStockActual.setText(Integer.toString(d5.getStockActual()));
                    txtStockMinimo.setText(Integer.toString(d5.getStockMinimo()));
                    cmbAdministracion.setSelectedItem(admin);
                    cmbTipoProducto.setSelectedItem(tipo);
//                      cmbAdministracion.
                    btnEliminar.setEnabled(true);
                    btnModificar.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Producto no encontrado");
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "ERROR: El nombre no existe.");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtNombreProductoGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreProductoGenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreProductoGenActionPerformed

    private void btnListarParecidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarParecidosActionPerformed
        DaoProducto da = new DaoProducto();
        da.setNombreProductoPat(txtNombreProductoPat.getText());
        txtNombreProductoPat.setText("");
        tblProductos.setModel(da.listar());
    }//GEN-LAST:event_btnListarParecidosActionPerformed

    private void tblProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMouseClicked
        int filaSeleccionada = tblProductos.getSelectedRow();
        int columna = 0;
        busqueda = Integer.parseInt((String) tblProductos.getValueAt(filaSeleccionada, columna));
        txtNombreProductoPat.setText((String) tblProductos.getModel().getValueAt(filaSeleccionada, columna + 1));
        txtNombreProductoGen.setText((String) tblProductos.getModel().getValueAt(filaSeleccionada, columna + 2));
        txtContenidoCaja.setText((String) tblProductos.getModel().getValueAt(filaSeleccionada, columna + 3));
        txtStockActual.setText((String) tblProductos.getModel().getValueAt(filaSeleccionada, columna + 4));
        txtStockMinimo.setText((String) tblProductos.getModel().getValueAt(filaSeleccionada, columna + 5));
        cmbAdministracion.setSelectedItem((String) tblProductos.getModel().getValueAt(filaSeleccionada, columna + 6));
        cmbTipoProducto.setSelectedItem((String) tblProductos.getModel().getValueAt(filaSeleccionada, columna + 7));
        btnEliminar.setEnabled(true);
        btnModificar.setEnabled(true);
    }//GEN-LAST:event_tblProductosMouseClicked

    private void txtNombreProductoPatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreProductoPatKeyReleased
        txtNombreProductoPat.setText(txtNombreProductoPat.getText().toUpperCase());
    }//GEN-LAST:event_txtNombreProductoPatKeyReleased

    private void txtNombreProductoGenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreProductoGenKeyTyped

    }//GEN-LAST:event_txtNombreProductoGenKeyTyped

    private void txtNombreProductoGenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreProductoGenKeyReleased
        txtNombreProductoGen.setText(txtNombreProductoGen.getText().toUpperCase());
    }//GEN-LAST:event_txtNombreProductoGenKeyReleased

    private void txtContenidoCajaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContenidoCajaKeyReleased
        txtContenidoCaja.setText(txtContenidoCaja.getText().toUpperCase());
    }//GEN-LAST:event_txtContenidoCajaKeyReleased

    private void txtStockActualKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockActualKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStockActualKeyReleased

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.setVisible(false);
        FrmPrincipal fm = new FrmPrincipal();
        fm.setVisible(true);

    }//GEN-LAST:event_btnSalirActionPerformed

    public boolean isNumeric(String cad) {
        return cad.matches("[-+]?\\d*\\.?\\d+");
    }

    /**
     * Metodo que nos permite cargar el combobox del campo tipo de Producto.
     */
    private void CargacomboTipo() {
        Connection con = Conex.getInstance().getConnection();
        String sql = "{call sp_tip_sel ()}";

        try {
            CallableStatement stm = con.prepareCall(sql);
            cmbTipoProducto.removeAllItems();
            ResultSet rs = stm.executeQuery();
            while (rs.next()) {
                cmbTipoProducto.addItem(rs.getString("tipo"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmProducto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Metodo que nos permite cargar el combobox del campo medio de
     * administracion.
     */
    private void CargacomboAdmin() {
        Connection con = Conex.getInstance().getConnection();
        String sql = "{call sp_adm_sel ()}";
        try {
            CallableStatement stm = con.prepareCall(sql);
            cmbAdministracion.removeAllItems();
            ResultSet rs = stm.executeQuery();
            while (rs.next()) {
                cmbAdministracion.addItem(rs.getString("administracion"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmProducto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new frmProducto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregarAdministracion;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnListarParecidos;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnTipo;
    private javax.swing.JComboBox cmbAdministracion;
    private javax.swing.JComboBox cmbTipoProducto;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAdministracion;
    private javax.swing.JLabel lblContenidoCaja;
    private javax.swing.JLabel lblNombreProductoGen;
    private javax.swing.JLabel lblNombreProductoPat;
    private javax.swing.JLabel lblProducto;
    private javax.swing.JLabel lblStockActual;
    private javax.swing.JLabel lblStockMinimo;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtContenidoCaja;
    private javax.swing.JTextField txtNombreProductoGen;
    private javax.swing.JTextField txtNombreProductoPat;
    private javax.swing.JTextField txtStockActual;
    private javax.swing.JTextField txtStockMinimo;
    // End of variables declaration//GEN-END:variables
}
